
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Rojen
 */
public class TutorAdd extends javax.swing.JFrame {

    /**
     * Creates new form TutorAdd
     */
    File file = new File("./ScheduleSystem.db");
    User user;
    myTutor tutor;
    boolean edit;
    boolean signedIn;
  /**
   * Creates a New Tutor add form
   * @throws ClassNotFoundException Throws ClassNotFoundException if the class is not found
   * @throws SQLException Throws SQLException if the database is not connected
   */
    public TutorAdd() throws ClassNotFoundException, SQLException {
            initComponents();
            Class.forName("org.sqlite.JDBC");
            Connection connection = DriverManager.getConnection(DB_NAME);
            statement = connection.createStatement();
            
            System.out.println(MondayList.getLastVisibleIndex());
            
    }
    /**
     * /**
   * Creates a New Tutor add form
    * @param edit Edit is the boolean value for whether to edit or not
     * @param tutor tutor is the initial tutor whose schedule is displayed
   * @throws ClassNotFoundException Throws ClassNotFoundException if the class is not found
   * @throws SQLException Throws SQLException if the database is not connected
  
     */
    
    public TutorAdd(boolean edit, myTutor tutor) throws ClassNotFoundException, SQLException {
        initComponents();
        Class.forName("org.sqlite.JDBC");
        
        Connection connection = DriverManager.getConnection(DB_NAME);
        
        statement = connection.createStatement();
        this.tutor = tutor;
        this.edit = edit;
        
        if (edit) {
            NameTextfield.setEditable(false);
            getInformation();
        }
    }

    public TutorAdd(User user) throws ClassNotFoundException, SQLException {
        signedIn = true;
        this.user = user;
        initComponents();
        Class.forName("org.sqlite.JDBC");
        Connection connection = DriverManager.getConnection(DB_NAME);
        statement = connection.createStatement();
    }
    
    public TutorAdd(User user, boolean edit, myTutor tutor) throws ClassNotFoundException, SQLException {
        signedIn = true;
        this.user = user;
        initComponents();
        Class.forName("org.sqlite.JDBC");
        
        Connection connection = DriverManager.getConnection(DB_NAME);
        
        statement = connection.createStatement();
        
        this.tutor = tutor;
        this.edit = edit;
        
        if (edit) {
            NameTextfield.setEditable(false);
            getInformation();
        }

    }
    // More information for DB
    private static final String DB_NAME = "jdbc:sqlite:ScheduleSystem.db";
    /**
     * Initializing the statement that's declared above
    **/
    public static Statement statement;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        TutorAdd = new javax.swing.JPanel();
        BackButton = new javax.swing.JButton();
        TutorLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        SubjectLabel = new javax.swing.JLabel();
        NameTextfield = new javax.swing.JTextField();
        ContactLabel = new javax.swing.JLabel();
        ContactTextfield = new javax.swing.JTextField();
        AvailableTimeLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CalculusList = new javax.swing.JList<>();
        ConfirmButton = new javax.swing.JButton();
        MondayLabel = new javax.swing.JLabel();
        TuesdayLabel = new javax.swing.JLabel();
        WednesdayLabel = new javax.swing.JLabel();
        FridayLabel = new javax.swing.JLabel();
        ThursdayLabel = new javax.swing.JLabel();
        TuedayPanel = new javax.swing.JScrollPane();
        TuesdayList = new javax.swing.JList<>();
        WednesdayPanel = new javax.swing.JScrollPane();
        WednesdayList = new javax.swing.JList<>();
        ThursdayPanel = new javax.swing.JScrollPane();
        ThursdayList = new javax.swing.JList<>();
        FridayPanel = new javax.swing.JScrollPane();
        FridayList = new javax.swing.JList<>();
        MondayPanel = new javax.swing.JScrollPane();
        MondayList = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        AlgebraList1 = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        StatisticsList = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        PreCalcList = new javax.swing.JList<>();
        AlgebraLabel = new javax.swing.JLabel();
        PreCalcLabel = new javax.swing.JLabel();
        CalculusLabel = new javax.swing.JLabel();
        StatisticsLabel = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tutor Information");

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        TutorLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        TutorLabel.setText("Tutor Scheduling System");

        NameLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NameLabel.setText("Name");

        SubjectLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        SubjectLabel.setText("Subject");

        NameTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameTextfieldActionPerformed(evt);
            }
        });

        ContactLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ContactLabel.setText("Contact");

        ContactTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContactTextfieldActionPerformed(evt);
            }
        });

        AvailableTimeLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        AvailableTimeLabel.setText("Available time");

        jScrollPane1.setToolTipText("");

        CalculusList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "1552", "1570", "1571", "1572", "1580", "1581", "2670", "2673", "3705", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(CalculusList);

        ConfirmButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ConfirmButton.setText("Confirm");
        ConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmButtonActionPerformed(evt);
            }
        });

        MondayLabel.setText("Monday");

        TuesdayLabel.setText("Tuesday");

        WednesdayLabel.setText("Wednesday");

        FridayLabel.setText("Friday");

        ThursdayLabel.setText("Thursday");

        TuesdayList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "8", "9", "10", "11", "12", "1", "2", "3", "4" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        TuedayPanel.setViewportView(TuesdayList);

        WednesdayList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "8", "9", "10", "11", "12", "1", "2", "3", "4" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        WednesdayPanel.setViewportView(WednesdayList);

        ThursdayList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "8", "9", "10", "11", "12", "1", "2", "3", "4" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ThursdayPanel.setViewportView(ThursdayList);

        FridayList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "8", "9", "10", "11", "12", "1", "2", "3", "4" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        FridayPanel.setViewportView(FridayList);

        MondayPanel.setToolTipText("");

        MondayList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "8", "9", "10", "11", "12", "1", "2", "3", "4" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        MondayPanel.setViewportView(MondayList);

        jScrollPane4.setToolTipText("");

        AlgebraList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "1505    ", "1507    " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(AlgebraList1);

        jScrollPane5.setToolTipText("");

        StatisticsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "2623", "2601", "2625", "3717", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(StatisticsList);

        jScrollPane6.setToolTipText("");

        PreCalcList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "1510", "1511", "1513", "    " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(PreCalcList);

        AlgebraLabel.setText("Algreba");

        PreCalcLabel.setText("Pre-Calculus");

        CalculusLabel.setText("Calculus");

        StatisticsLabel.setText("Statistics");

        javax.swing.GroupLayout TutorAddLayout = new javax.swing.GroupLayout(TutorAdd);
        TutorAdd.setLayout(TutorAddLayout);
        TutorAddLayout.setHorizontalGroup(
            TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TutorAddLayout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TutorAddLayout.createSequentialGroup()
                        .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(TutorAddLayout.createSequentialGroup()
                                .addComponent(AvailableTimeLabel)
                                .addGap(69, 69, 69)
                                .addComponent(MondayLabel))
                            .addComponent(MondayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TuesdayLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TuedayPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(WednesdayLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(WednesdayPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(TutorAddLayout.createSequentialGroup()
                                .addComponent(ThursdayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(FridayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(TutorAddLayout.createSequentialGroup()
                                .addComponent(ThursdayLabel)
                                .addGap(18, 18, 18)
                                .addComponent(FridayLabel)))
                        .addGap(412, 412, 412))
                    .addGroup(TutorAddLayout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(ContactTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(TutorAddLayout.createSequentialGroup()
                .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TutorAddLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BackButton)
                        .addGap(332, 332, 332)
                        .addComponent(TutorLabel))
                    .addGroup(TutorAddLayout.createSequentialGroup()
                        .addGap(533, 533, 533)
                        .addComponent(ConfirmButton)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TutorAddLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ContactLabel)
                    .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(NameLabel)
                        .addComponent(SubjectLabel)))
                .addGap(81, 81, 81)
                .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TutorAddLayout.createSequentialGroup()
                        .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AlgebraLabel)
                            .addGroup(TutorAddLayout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PreCalcLabel)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(35, 35, 35)
                        .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TutorAddLayout.createSequentialGroup()
                                .addComponent(CalculusLabel)
                                .addGap(18, 18, 18)))
                        .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(TutorAddLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(StatisticsLabel))))
                    .addComponent(NameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(399, 399, 399))
        );
        TutorAddLayout.setVerticalGroup(
            TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TutorAddLayout.createSequentialGroup()
                .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TutorAddLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(TutorLabel))
                    .addGroup(TutorAddLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BackButton)))
                .addGap(36, 36, 36)
                .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameLabel)
                    .addComponent(NameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SubjectLabel)
                    .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AlgebraLabel)
                        .addComponent(PreCalcLabel)
                        .addComponent(CalculusLabel)
                        .addComponent(StatisticsLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(TutorAddLayout.createSequentialGroup()
                        .addComponent(ContactLabel)
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TutorAddLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(ContactTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MondayLabel)
                            .addComponent(TuesdayLabel)
                            .addComponent(WednesdayLabel)
                            .addComponent(FridayLabel)
                            .addComponent(ThursdayLabel)
                            .addComponent(AvailableTimeLabel))))
                .addGap(21, 21, 21)
                .addGroup(TutorAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TuedayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WednesdayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThursdayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FridayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MondayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(ConfirmButton)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TutorAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TutorAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmButtonActionPerformed
        // TODO add your handling code here:
        String name = NameTextfield.getText();
        String contact = ContactTextfield.getText();
        
        String algebra = "";
        String precalc = "";
        String calc = "";
        String stats = "";
        
        String mon = "";
        String tues = "";
        String wed = "";
        String thurs = "";
        String fri = "";

        for(String temp : AlgebraList1.getSelectedValuesList())
            algebra += temp + ", ";
        for(String temp : PreCalcList.getSelectedValuesList())
            precalc += temp + ", ";
        for(String temp : CalculusList.getSelectedValuesList())
            calc += temp + ", ";
        for(String temp : StatisticsList.getSelectedValuesList())
            stats += temp + ", ";
        
        for (String temp : MondayList.getSelectedValuesList())
            mon += temp + ", ";
        for (String temp : TuesdayList.getSelectedValuesList())
            tues += temp + ", ";
        for (String temp : WednesdayList.getSelectedValuesList())
            wed += temp + ", ";
        for (String temp : ThursdayList.getSelectedValuesList())
            thurs += temp + ", ";
        for (String temp : FridayList.getSelectedValuesList())
            fri += temp + ", ";
        
        System.out.println(algebra);
        System.out.println(precalc);
        
        //System.out.println(newtutor.getMonday());
        myTutor newtutor;
        newtutor = new myTutor(name, algebra, precalc, calc, stats, contact, mon, tues, wed, thurs, fri);
        try {
            if (edit) {
                //statement.executeUpdate("DELETE FROM tutor WHERE name = 'Mike' AND ");
                System.out.println("EDIT HIT");
                StringBuilder sb = new StringBuilder();
                sb.append("UPDATE tutor SET algebra = '")
                        .append(algebra + "', precalc = '" + precalc + "', calc = '" + calc + "', stats = '" + stats)
                        .append("', contact = '" + contact)
                        .append("', mon = '" + mon + "', tues = '" + tues + "', wed = '" + wed + "', thurs = '" + thurs + "', fri = '" + fri + "' ")
                        .append("WHERE name = '" + tutor.getName() + "';");
                   
                statement.executeUpdate(sb.toString());
                             
                
            }
            
            else {
                newtutor.save(statement);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TutorAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        TutorAdd.this.setVisible(false);
        Tutor tutorframe;
        try {
            
            if (signedIn) {
                if (user.getLevel().equals("tutor")) {
                    TutorDayandTime dayandtime = new TutorDayandTime(user, newtutor, statement);
                    dayandtime.setVisible(true);
                }
                else {
                    tutorframe = new Tutor(user);
                    tutorframe.setVisible(true);
                }
            }
            else {
                tutorframe = new Tutor();
                tutorframe.setVisible(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TutorAdd.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TutorAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ConfirmButtonActionPerformed

    private void ContactTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContactTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ContactTextfieldActionPerformed

    private void NameTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameTextfieldActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        TutorAdd.this.setVisible(false);
        Tutor tutor;
        try {
            tutor = new Tutor();
            tutor.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(TutorAdd.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TutorAdd.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_BackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TutorAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TutorAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TutorAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TutorAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                try {
//                    new TutorAdd().setVisible(true);
//                } catch (ClassNotFoundException ex) {
//                    Logger.getLogger(TutorAdd.class.getName()).log(Level.SEVERE, null, ex);
//                } catch (SQLException ex) {
//                    Logger.getLogger(TutorAdd.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
    }
/**
 * Get method  for getting information about the tutor
 */
        public void getInformation() {
        NameTextfield.setText(tutor.getName());
        ContactTextfield.setText(tutor.getContact());
        
        ArrayList<Integer> alg = new ArrayList(), pre = new ArrayList(), calc = new ArrayList(), stat = new ArrayList();
        
        ArrayList<Integer> monday = new ArrayList(), tuesday = new ArrayList(), wednesday = new ArrayList(), thursday = new ArrayList(), friday = new ArrayList();
        
        for(int i = 0; i < AlgebraList1.getModel().getSize(); i++) {
            if(tutor.getAlgebra().contains(", " + AlgebraList1.getModel().getElementAt(i) + ", ") || 
                    tutor.getAlgebra().startsWith(AlgebraList1.getModel().getElementAt(i) + ", "))
                alg.add(i);
        }
        for(int i = 0; i < PreCalcList.getModel().getSize(); i++) {
            if(tutor.getPreCalc().contains(", " + PreCalcList.getModel().getElementAt(i) + ", ") || 
                    tutor.getPreCalc().startsWith(PreCalcList.getModel().getElementAt(i) + ", "))
                pre.add(i);
        }
        for(int i = 0; i < CalculusList.getModel().getSize(); i++) {
            if(tutor.getCalc().contains(", " + CalculusList.getModel().getElementAt(i) + ", ") || 
                    tutor.getCalc().startsWith(CalculusList.getModel().getElementAt(i) + ", "))
                calc.add(i);
        }
        for(int i = 0; i < StatisticsList.getModel().getSize(); i++) {
            if(tutor.getStats().contains(", " + StatisticsList.getModel().getElementAt(i) + ", ") || 
                    tutor.getStats().startsWith(StatisticsList.getModel().getElementAt(i) + ", "))
                stat.add(i);
        }
        AlgebraList1.setSelectedIndices(asArray(alg));
        PreCalcList.setSelectedIndices(asArray(pre));
        CalculusList.setSelectedIndices(asArray(calc));
        StatisticsList.setSelectedIndices(asArray(stat));
        
        // get hours for each day
        for(int hour=0; hour < MondayList.getModel().getSize(); hour++) {
            if(tutor.getMonday().contains(", " + MondayList.getModel().getElementAt(hour) + ", ") || 
                    tutor.getMonday().startsWith(MondayList.getModel().getElementAt(hour) + ", ")) {
                monday.add(hour);
            }
            if(tutor.getTuesday().contains(", " + TuesdayList.getModel().getElementAt(hour) + ", ") || 
                    tutor.getTuesday().startsWith(TuesdayList.getModel().getElementAt(hour) + ", ")) {
                tuesday.add(hour);
            }
            if(tutor.getWednesday().contains(", " + WednesdayList.getModel().getElementAt(hour) + ", ") || 
                    tutor.getWednesday().startsWith(WednesdayList.getModel().getElementAt(hour) + ", ")) {
                wednesday.add(hour);
            }
            if(tutor.getThursday().contains(", " + ThursdayList.getModel().getElementAt(hour) + ", ") || 
                    tutor.getThursday().startsWith(ThursdayList.getModel().getElementAt(hour) + ", ")) {
                thursday.add(hour);
            }
            if(tutor.getFriday().contains(", " + FridayList.getModel().getElementAt(hour) + ", ") || 
                    tutor.getFriday().startsWith(FridayList.getModel().getElementAt(hour) + ", ")) {
                friday.add(hour);
            }
        }
        // select current hours
        MondayList.setSelectedIndices(asArray(monday));
        TuesdayList.setSelectedIndices(asArray(tuesday));
        WednesdayList.setSelectedIndices(asArray(wednesday));
        ThursdayList.setSelectedIndices(asArray(thursday));
        FridayList.setSelectedIndices(asArray(friday));
        
    }
    /**
     * Methods for initializing day of the tutor
     * @param day Day is an array list of day
     * @return  returns a Day array which has schedule of tutor
     */
    public int[] asArray(ArrayList<Integer> day) {
        int[] dayarr = new int[day.size()];
        for (int i=0; i<day.size(); i++)
            dayarr[i] = day.get(i);
        
        return dayarr;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AlgebraLabel;
    private javax.swing.JList<String> AlgebraList1;
    private javax.swing.JLabel AvailableTimeLabel;
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel CalculusLabel;
    private javax.swing.JList<String> CalculusList;
    private javax.swing.JButton ConfirmButton;
    private javax.swing.JLabel ContactLabel;
    private javax.swing.JTextField ContactTextfield;
    private javax.swing.JLabel FridayLabel;
    private javax.swing.JList<String> FridayList;
    private javax.swing.JScrollPane FridayPanel;
    private javax.swing.JLabel MondayLabel;
    private javax.swing.JList<String> MondayList;
    private javax.swing.JScrollPane MondayPanel;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JTextField NameTextfield;
    private javax.swing.JLabel PreCalcLabel;
    private javax.swing.JList<String> PreCalcList;
    private javax.swing.JLabel StatisticsLabel;
    private javax.swing.JList<String> StatisticsList;
    private javax.swing.JLabel SubjectLabel;
    private javax.swing.JLabel ThursdayLabel;
    private javax.swing.JList<String> ThursdayList;
    private javax.swing.JScrollPane ThursdayPanel;
    private javax.swing.JScrollPane TuedayPanel;
    private javax.swing.JLabel TuesdayLabel;
    private javax.swing.JList<String> TuesdayList;
    private javax.swing.JPanel TutorAdd;
    private javax.swing.JLabel TutorLabel;
    private javax.swing.JLabel WednesdayLabel;
    private javax.swing.JList<String> WednesdayList;
    private javax.swing.JScrollPane WednesdayPanel;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    // End of variables declaration//GEN-END:variables
}

