
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Rojen
 */
public class Tutor extends javax.swing.JFrame {

    /**
     * Creates new form Tutor
     */
    File file = new File("./ScheduleSystem.db");
    ArrayList<myTutor> tutors = new ArrayList();
    /**
     * Creates new form Tutor
     */
    /**
     * Creates New Tutor Form 
     * @throws SQLException Throws SQLException if the database is not connected
     * @throws ClassNotFoundException  throws ClassNotFoundException if the class is not found
     */
    public Tutor() throws SQLException, ClassNotFoundException {
        initComponents();
        Class.forName("org.sqlite.JDBC");
        
        Connection connection = DriverManager.getConnection(DB_NAME);
        
        statement = connection.createStatement();
        
        getTutors(statement);
    }
    // More information for DB
    private static final String DB_NAME = "jdbc:sqlite:ScheduleSystem.db";
    /**
    *Initializing the statement that's declared above
    **/
    public static Statement statement;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TutorTable = new javax.swing.JTable();
        BackButton = new javax.swing.JButton();
        TutorLabel = new javax.swing.JLabel();
        ViewScheduleButton = new javax.swing.JButton();
        AddTutorButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tutor Scheduling System");

        TutorTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TutorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tutor name", "Class"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TutorTable.setPreferredSize(new java.awt.Dimension(825, 200));
        TutorTable.setRowHeight(50);
        jScrollPane1.setViewportView(TutorTable);

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        TutorLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        TutorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TutorLabel.setText("Tutor Scheduling System");

        ViewScheduleButton.setText("View Schedule");
        ViewScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewScheduleButtonActionPerformed(evt);
            }
        });

        AddTutorButton.setText("Add Tutor");
        AddTutorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTutorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(332, Short.MAX_VALUE)
                .addComponent(TutorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(453, 453, 453))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AddTutorButton)
                .addGap(356, 356, 356)
                .addComponent(ViewScheduleButton)
                .addGap(346, 346, 346))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BackButton)
                        .addContainerGap(1237, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackButton)
                .addGap(29, 29, 29)
                .addComponent(TutorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddTutorButton)
                    .addComponent(ViewScheduleButton))
                .addGap(48, 48, 48))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        Tutor.this.setVisible(false);
        
       AdminWelcome begin = new AdminWelcome();
        begin.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void ViewScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewScheduleButtonActionPerformed
        int selectedIndex = TutorTable.getSelectedRow();
        System.out.println(selectedIndex);
        myTutor mytutor = tutors.get(selectedIndex);
        Tutor.this.setVisible(false);
        TutorDayandTime dayandtime = new TutorDayandTime(mytutor, statement);
        dayandtime.setVisible(true);
        
    }//GEN-LAST:event_ViewScheduleButtonActionPerformed

    private void AddTutorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddTutorButtonActionPerformed
    Tutor.this.setVisible(false);
        TutorAdd tutorbook;
        try {
            tutorbook = new TutorAdd();
            tutorbook.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tutor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Tutor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AddTutorButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Tutor().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Tutor.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Tutor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    /**
     * Get method for getting the tutors
     * @param statement Statement which is declared before
     * @throws SQLException Throws SQLException if the database is not connected 
     */
    public void getTutors(Statement statement) throws SQLException {
        ResultSet rs = statement.executeQuery("SELECT * FROM tutor");
        
        
        while (rs.next()) {
            tutors.add(new myTutor(rs.getString("name"), rs.getString("algebra"), rs.getString("precalc"), rs.getString("calc"), rs.getString("stats"), rs.getString("contact"),
            rs.getString("mon"), rs.getString("tues"), rs.getString("wed"), rs.getString("thurs"), rs.getString("fri")));
            
        }
        
        for(int i = 0; i<tutors.size(); i++) {
            TutorTable.setValueAt(tutors.get(i).getName(), i, 0);
            TutorTable.setValueAt(tutors.get(i).getClasses(), i, 1);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddTutorButton;
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel TutorLabel;
    private javax.swing.JTable TutorTable;
    private javax.swing.JButton ViewScheduleButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

